/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ProxyAirdrop,
  ProxyAirdropInterface,
} from "../../../../contracts/airdrop/ProxyAirdrop.sol/ProxyAirdrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collectionAddress",
        type: "address",
      },
    ],
    name: "AirdropDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_rootHash",
        type: "bytes32",
      },
    ],
    name: "deployAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610d62806101c86000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b57806394f6fd5914610079578063f2fde38b14610095575b600080fd5b6100596100b1565b005b6100636100c5565b60405161007091906103c5565b60405180910390f35b610093600480360381019061008e9190610447565b6100ee565b005b6100af60048036038101906100aa9190610487565b61019e565b005b6100b9610224565b6100c360006102ab565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082826040516100fe90610377565b6101099291906104c3565b604051809103906000f080158015610125573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c806644a18b13abc3038c1019bfa6b3fbc14636c4ccaf11ddddd207ea73b41560405160405180910390a4505050565b6101a6610224565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102185760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161020f91906103c5565b60405180910390fd5b610221816102ab565b50565b61022c61036f565b73ffffffffffffffffffffffffffffffffffffffff1661024a6100c5565b73ffffffffffffffffffffffffffffffffffffffff16146102a95761026d61036f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102a091906103c5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b610840806104ed83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103af82610384565b9050919050565b6103bf816103a4565b82525050565b60006020820190506103da60008301846103b6565b92915050565b600080fd5b6103ee816103a4565b81146103f957600080fd5b50565b60008135905061040b816103e5565b92915050565b6000819050919050565b61042481610411565b811461042f57600080fd5b50565b6000813590506104418161041b565b92915050565b6000806040838503121561045e5761045d6103e0565b5b600061046c858286016103fc565b925050602061047d85828601610432565b9150509250929050565b60006020828403121561049d5761049c6103e0565b5b60006104ab848285016103fc565b91505092915050565b6104bd81610411565b82525050565b60006040820190506104d860008301856103b6565b6104e560208301846104b4565b939250505056fe608060405234801561001057600080fd5b5060405161084038038061084083398181016040528101906100329190610119565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050610159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b082610085565b9050919050565b6100c0816100a5565b81146100cb57600080fd5b50565b6000815190506100dd816100b7565b92915050565b6000819050919050565b6100f6816100e3565b811461010157600080fd5b50565b600081519050610113816100ed565b92915050565b600080604083850312156101305761012f610080565b5b600061013e858286016100ce565b925050602061014f85828601610104565b9150509250929050565b6106d8806101686000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d80009a146100465780639a114cb214610064578063fc0c546a14610080575b600080fd5b61004e61009e565b60405161005b91906102e9565b60405180910390f35b61007e600480360381019061007991906103a9565b6100a4565b005b610088610203565b6040516100959190610488565b60405180910390f35b60015481565b600033846040516020016100b992919061051e565b60405160208183030381529060405280519060200120905061011f838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060015483610227565b61015e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610155906105a7565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016101b99291906105e5565b6020604051808303816000875af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610646565b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082610234858461023e565b1490509392505050565b60008082905060005b8451811015610283576102748286838151811061026757610266610673565b5b602002602001015161028e565b91508080600101915050610247565b508091505092915050565b60008183106102a6576102a182846102b9565b6102b1565b6102b083836102b9565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b6102e3816102d0565b82525050565b60006020820190506102fe60008301846102da565b92915050565b600080fd5b600080fd5b6000819050919050565b6103218161030e565b811461032c57600080fd5b50565b60008135905061033e81610318565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261036957610368610344565b5b8235905067ffffffffffffffff81111561038657610385610349565b5b6020830191508360208202830111156103a2576103a161034e565b5b9250929050565b6000806000604084860312156103c2576103c1610304565b5b60006103d08682870161032f565b935050602084013567ffffffffffffffff8111156103f1576103f0610309565b5b6103fd86828701610353565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061044e61044961044484610409565b610429565b610409565b9050919050565b600061046082610433565b9050919050565b600061047282610455565b9050919050565b61048281610467565b82525050565b600060208201905061049d6000830184610479565b92915050565b60006104ae82610409565b9050919050565b60008160601b9050919050565b60006104cd826104b5565b9050919050565b60006104df826104c2565b9050919050565b6104f76104f2826104a3565b6104d4565b82525050565b6000819050919050565b6105186105138261030e565b6104fd565b82525050565b600061052a82856104e6565b60148201915061053a8284610507565b6020820191508190509392505050565b600082825260208201905092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000610591600d8361054a565b915061059c8261055b565b602082019050919050565b600060208201905081810360008301526105c081610584565b9050919050565b6105d0816104a3565b82525050565b6105df8161030e565b82525050565b60006040820190506105fa60008301856105c7565b61060760208301846105d6565b9392505050565b60008115159050919050565b6106238161060e565b811461062e57600080fd5b50565b6000815190506106408161061a565b92915050565b60006020828403121561065c5761065b610304565b5b600061066a84828501610631565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c929d1c031e1610fdb8e4f6c0a1c60f297629f95c7c9a26dcbf39e465003d2c764736f6c63430008190033a2646970667358221220bbe72040d1e6fd8f08c9ca22b2f86dc2243bccfb9691f6002b1973f5850a1eef64736f6c63430008190033";

type ProxyAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAirdrop__factory extends ContractFactory {
  constructor(...args: ProxyAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyAirdrop> {
    return super.deploy(overrides || {}) as Promise<ProxyAirdrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyAirdrop {
    return super.attach(address) as ProxyAirdrop;
  }
  override connect(signer: Signer): ProxyAirdrop__factory {
    return super.connect(signer) as ProxyAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAirdropInterface {
    return new utils.Interface(_abi) as ProxyAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAirdrop {
    return new Contract(address, _abi, signerOrProvider) as ProxyAirdrop;
  }
}
